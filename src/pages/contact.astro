---
import BaseLayout from '../layouts/BaseLayout.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import Button from '../components/Button.astro';
import '../styles/form.css';

const projectTypes = [
  "Startup - Launchpad",
  "Entreprise - Innovation Strike Team"
];
---

<BaseLayout title="Contact">
  <Header />
  
  <main class="flex-1" id="main-content" tabindex="-1">
    <!-- Hero Section -->
    <section class="pt-24 pb-24 relative overflow-hidden bg-slate-950">
      <div class="absolute inset-0 bg-gradient-to-b from-[#818CF8]/10 to-transparent"></div>
      
      <div class="container mx-auto px-6 relative z-10">
        <div class="max-w-4xl mx-auto text-center">
          <h1 class="text-4xl md:text-6xl font-display font-bold mb-6 animate-slide-in">
            Passons à <span class="gradient-text-dark">l'Action</span>
          </h1>
          <p class="text-xl text-slate-400 leading-relaxed animate-slide-in stagger-1">
            Vous avez une idée ? Un défi business ? Parlons-en. 
            Notre équipe analyse chaque projet et revient vers vous sous 48h.
          </p>
        </div>
      </div>
    </section>

    <!-- Form Section -->
    <section class="py-20 bg-slate-900">
      <div class="container mx-auto px-6">
        <div class="max-w-2xl mx-auto">
          <form 
            action="https://formsubmit.co/457cd5876a38cb9a5b9f873f988335a9" 
            method="POST"
            class="space-y-8" 
            id="contact-form"
          >
            <!-- FormSubmit.co Configuration -->
            <input type="hidden" name="_subject" value="Nouveau contact D11N - Site Web">
            <input type="hidden" name="_captcha" value="false">
            <input type="hidden" name="_next" value="https://d11n.studio/contact?success=true">
            <input type="hidden" name="_template" value="table">
            
            <!-- Simplified Form -->
            <div class="card-dark p-8">
              <div class="space-y-6">
                <div>
                  <label for="name" class="form-label form-label-required">
                    Qui êtes-vous ?
                  </label>
                  <input
                    type="text"
                    id="name"
                    name="name"
                    required
                    class="form-input"
                    placeholder="Jean Dupont, CEO de Startup Inc."
                    aria-describedby="name-error"
                  />
                  <div id="name-error" class="error-message hidden" role="alert"></div>
                </div>
                
                <div>
                  <label for="email" class="form-label form-label-required">
                    Email
                  </label>
                  <input
                    type="email"
                    id="email"
                    name="email"
                    required
                    class="form-input"
                    placeholder="jean@exemple.com"
                    aria-describedby="email-error"
                  />
                  <div id="email-error" class="error-message hidden" role="alert"></div>
                </div>
                
                <div>
                  <label for="project-type" class="form-label form-label-required">
                    Je suis intéressé par
                  </label>
                  <select
                    id="project-type"
                    name="Type de projet"
                    required
                    class="form-select"
                    aria-describedby="project-type-error"
                  >
                    <option value="">Sélectionnez une offre</option>
                    {projectTypes.map((type) => (
                      <option value={type}>{type}</option>
                    ))}
                  </select>
                  <div id="project-type-error" class="error-message hidden" role="alert"></div>
                </div>
                
                <div>
                  <label for="message" class="form-label form-label-required">
                    Votre défi en quelques mots
                  </label>
                  <textarea
                    id="message"
                    name="message"
                    rows="5"
                    required
                    class="form-textarea"
                    placeholder="J'ai une idée de marketplace pour les artisans locaux. Le problème : comment valider le concept et acquérir les premiers utilisateurs sans dépenser une fortune..."
                    aria-describedby="message-error"
                  ></textarea>
                  <div id="message-error" class="error-message hidden" role="alert"></div>
                </div>
              </div>
            </div>

            <!-- Submit -->
            <div class="text-center">
              <button type="submit" class="px-8 py-4 rounded-xl btn-dark-primary text-white font-semibold hover-lift-dark shine-dark text-lg" id="submit-button">
                <span id="submit-text">Démarrer la conversation →</span>
                <span id="loading-text" class="hidden">Envoi en cours...</span>
              </button>
              <p class="mt-4 text-sm text-slate-400">
                Réponse garantie sous 48h. Zéro spam. Que du concret.
              </p>
            </div>
          </form>
        </div>
      </div>
    </section>

    <!-- Contact Info Section -->
    <section class="py-20 bg-slate-950">
      <div class="container mx-auto px-6 relative z-10">
        <div class="max-w-4xl mx-auto text-center">
          <h2 class="text-3xl font-display font-bold text-white mb-12">
            Autres Moyens de <span class="gradient-text-dark">Nous Contacter</span>
          </h2>
          
          <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
            <div class="card-dark p-6">
              <h3 class="text-xl font-semibold text-white mb-2">Email Direct</h3>
              <a href="mailto:hello@d11n.studio" class="text-[#818CF8] hover:underline">
                hello@d11n.studio
              </a>
            </div>
            
            <div class="card-dark p-6">
              <h3 class="text-xl font-semibold text-white mb-2">Réponse Garantie</h3>
              <p class="text-slate-400">
                Sous 48h ouvrées maximum
              </p>
            </div>
          </div>
        </div>
      </div>
    </section>
    
  </main>

  <Footer />
</BaseLayout>

<script>
  // Form validation and accessibility improvements
  function validateForm() {
    const form = document.getElementById('contact-form');
    const submitButton = document.getElementById('submit-button');
    const submitText = document.getElementById('submit-text');
    const loadingText = document.getElementById('loading-text');
    
    let isValid = true;
    
    // Validate name
    const name = document.getElementById('name');
    const nameError = document.getElementById('name-error');
    if (!name.value.trim()) {
      showError(name, nameError, 'Veuillez saisir votre nom.');
      isValid = false;
    } else {
      hideError(name, nameError);
    }
    
    // Validate email
    const email = document.getElementById('email');
    const emailError = document.getElementById('email-error');
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    if (!email.value.trim()) {
      showError(email, emailError, 'Veuillez saisir votre email.');
      isValid = false;
    } else if (!emailRegex.test(email.value)) {
      showError(email, emailError, 'Veuillez saisir un email valide.');
      isValid = false;
    } else {
      hideError(email, emailError);
    }
    
    // Validate project type
    const projectType = document.getElementById('project-type');
    const projectTypeError = document.getElementById('project-type-error');
    if (!projectType.value) {
      showError(projectType, projectTypeError, 'Veuillez sélectionner une offre.');
      isValid = false;
    } else {
      hideError(projectType, projectTypeError);
    }
    
    // Validate message
    const message = document.getElementById('message');
    const messageError = document.getElementById('message-error');
    if (!message.value.trim()) {
      showError(message, messageError, 'Veuillez décrire votre défi.');
      isValid = false;
    } else if (message.value.trim().length < 10) {
      showError(message, messageError, 'Veuillez détailler davantage votre défi (minimum 10 caractères).');
      isValid = false;
    } else {
      hideError(message, messageError);
    }
    
    return isValid;
  }
  
  function showError(field, errorElement, message) {
    field.classList.add('invalid');
    field.setAttribute('aria-invalid', 'true');
    errorElement.textContent = message;
    errorElement.classList.remove('hidden');
  }
  
  function hideError(field, errorElement) {
    field.classList.remove('invalid');
    field.setAttribute('aria-invalid', 'false');
    errorElement.classList.add('hidden');
  }
  
  // Add form submission handler
  document.addEventListener('DOMContentLoaded', () => {
    const form = document.getElementById('contact-form');
    const submitButton = document.getElementById('submit-button');
    const submitText = document.getElementById('submit-text');
    const loadingText = document.getElementById('loading-text');
    
    form.addEventListener('submit', (e) => {
      if (!validateForm()) {
        e.preventDefault();
        // Focus on first error field
        const firstError = form.querySelector('.invalid');
        if (firstError) {
          firstError.focus();
        }
        return false;
      }
      
      // Show loading state
      submitButton.classList.add('btn-loading');
      submitButton.disabled = true;
      submitText.classList.add('hidden');
      loadingText.classList.remove('hidden');
    });
    
    // Add real-time validation
    ['name', 'email', 'project-type', 'message'].forEach(fieldId => {
      const field = document.getElementById(fieldId);
      field.addEventListener('blur', validateForm);
    });
  });
  
  // Check for success parameter in URL
  const urlParams = new URLSearchParams(window.location.search);
  const success = urlParams.get('success');
  
  if (success === 'true') {
    // Create success message
    const successMessage = document.createElement('div');
    successMessage.className = 'fixed top-4 right-4 bg-gradient-to-r from-[#34D399] to-[#10B981] text-white px-6 py-4 rounded-lg shadow-lg z-50 animate-slide-in';
    successMessage.innerHTML = `
      <div class="flex items-center gap-3">
        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
        </svg>
        <div>
          <p class="font-semibold">Message envoyé avec succès !</p>
          <p class="text-sm opacity-90">Nous vous répondrons sous 48h.</p>
        </div>
      </div>
    `;
    
    document.body.appendChild(successMessage);
    
    // Remove success parameter from URL
    window.history.replaceState({}, document.title, window.location.pathname);
    
    // Remove message after 5 seconds
    setTimeout(() => {
      successMessage.classList.add('animate-fade-out');
      setTimeout(() => successMessage.remove(), 500);
    }, 5000);
  }
</script>